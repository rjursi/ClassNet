<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        kYwYAAAAAElFTkSuQmCC
</value>
  </data>
</root>